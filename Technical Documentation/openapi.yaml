openapi: 3.0.0
info:
  title: Singapore Academy of Law (SAL) LawNet Legal Research APIs
  description: APIs for searching cases and obtaining full text of cases in LawNet.
  version: 1.0 (For Marketing Purposes)
tags:
  - name: Searching
    description: APIs relating to searching for cases within the LawNet Legal Research module.
  - name: Retrieving Content
    description: APIs relating to retrieving content within the LawNet Legal Research module.
paths:
  /v1-search/search:
    post:
      tags:
        - Searching
      summary: Search for cases within the LawNet Legal Research module.
      description: Use POST query parameters to specify the cases wanted. By default, the response will be returned in XML form with parsed parts.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/searchingRequest'
            example: |
              cURL:curl -X POST \
                  {{base url}}/v1-search/search \
                  -H 'Content-Type:application/x-www-form-urlencoded' \
                  -H 'cache-control:no-cache' \
                  -H 'x-api-key:{{API KEY}}' \
                  -d ‘apikey={{API KEY}}&cats={{Level 1 code}}&l2cats={{Level 2 code}}&l3cats={{Level 3 code}}&searchTerm=sample&page=1&maxperpage=15&orderBy=date-des&surroundingWords=5'
              
              C# (RestSharp):
                var client = new RestClient(“{{base url}}/v1-search/search");
                var request = new RestRequest(Method.POST);
                request.AddHeader("cache-control", "no-cache");
                request.AddHeader("x-api-key", "{{API KEY}}");
                request.AddHeader("Content-Type", "application/x-www-form-urlencoded");
                request.AddParameter("undefined", “apikey={{API KEY}}&cats={{Level 1 code}}&l2cats={{Level 2 code}}&l3cats={{Level 3 code}}&searchTerm=sample&page=1&maxperpage=15&orderBy=date-des&surroundingWords=5”, ParameterType.RequestBody);
                IRestResponse response = client.Execute(request);
              
              Java (Unirest):
                HttpResponse<String> response = Unirest.post("{{base url}}/v1-search/search")
                  .header("Content-Type", "application/x-www-form-urlencoded")
                  .header("x-api-key", "{{API KEY}}")
                  .header("cache-control", "no-cache")
                  .body("apikey={{API KEY}}&cats={{Level 1 code}}&l2cats={{Level 2 code}}&l3cats={{Level 3 code}}&searchTerm=sample&page=1&maxperpage=15&orderBy=date-des&surroundingWords=5")
                  .asString();
      responses:
        '200':
          description: Success - Search results or full text of content returned.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Search%20Results'
              example: |
                <searchStatistic>
                  <total>100</total>
                </searchStatistic>
                <searchResults>
                  <resultList>
                    <result>
                      <documentId>/Sample Group/sample 1.xml</documentId>
                      <document>
                        <Title>Sample Title 1</Title>
                        <Citation>[2019] sample 1</Citation>
                      </document>
                      <format>
                        <xml>Yes</xml>
                        <pdf>No</pdf>
                      </format>
                      <relevance>34</relevance>
                      <category>Sample Group</category>
                      <documentTooltipHolder>
                        <court>Court</court>
                        <corams>Luke Tan</corams>
                        <date>18 April 2018</date>
                        <caseno>sample-1111-2019 &amp; Ors</caseno>
                        <catchword>No catchword</catchword>
                      </documentTooltipHolder>
                      <casereference>
                        <following>0</following>
                        <referring>6</referring>
                        <distinguishing>0</distinguishing>
                        <notfollowing>0</notfollowing>
                        <overruling>0</overruling>
                      </casereference>
                      <snippets>
                        <snippet>...carefully laid trap by the 
                            <b>sample</b> content to...
                        </snippet>
                      </snippets>
                    </result>
                  </resultList>
                </searchResults>
        '400':
          description: Bad Request - Often this is because a required parameter is missing or a parameter’s value is invalid. (This is returned in XML format.)
        '402':
          description: Request Failed - Parameters valid but request failed.
        '403':
          description: Forbidden – Invalid/Missing API Key.
        '404':
          description: Not Found - The requested item doesn’t exist.
        '5XX':
          description: Server Errors - Something is wrong on our end.
  /v1-content/content:
    post:
      tags:
        - Retrieving Content
      summary: Retrieve content within the LawNet Legal Research.
      description: Use POST query parameters to specify the cases wanted. By default, the response will be returned in XML form with parsed parts.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/retrievingRequest'
            example: |
              cURL:
                curl -X POST \
                  {{base url}}/v1-content/content \
                  -H 'Content-Type:application/x-www-form-urlencoded' \
                  -H 'cache-control:no-cache' \
                  -H 'x-api-key:{{API KEY}}' \
                  -d ‘apikey={{API KEY}}&cats={{Level 1 code}}&l2cats={{Level 2 code}}&l3cats={{Level 3 code}}&docUrl=%2Fsample group%2Fsample 1.xml&format=xml'
              
              C# (RestSharp):
                var client = new RestClient("{{base url}}/v1-content/content");
                var request = new RestRequest(Method.POST);
                request.AddHeader("cache-control", "no-cache");
                request.AddHeader("x-api-key", "{{API KEY}}");
                request.AddHeader("Content-Type", "application/x-www-form-urlencoded");
                request.AddParameter("undefined",”apikey={{API KEY}}&cats={{Level 1 code}}&l2cats={{Level 2 code}}&l3cats={{Level 3 code}}&docUrl=%2Fsample group%2Fsample 1.xml&format=xml”, ParameterType.RequestBody);
                IRestResponse response = client.Execute(request);
              
              Java (Unirest):
                HttpResponse<String> response = Unirest.post("{{base url}}/v1-content/content")
                .header("Content-Type", "application/x-www-form-urlencoded")
                .header("x-api-key", "{{API KEY}}")
                .header("cache-control", "no-cache")
                .body(“apikey={{API KEY}}&cats={{Level 1 code}}&l2cats={{Level 2 code}}&l3cats={{Level 3 code}}&docUrl=%2Fsample group%2Fsample 1.xml&format=xml)
                .asString();
      responses:
        '200':
          description: Success - Search results or full text of content returned.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/content'
              example: |
                <searchResponse>
                  <supportingfiles>
                    <supporting>
                      <image>
                          <file>[2016] SGCA 0064_image6.png</file>
                      </image>
                      <binary></binary>
                    </supporting>
                  </supportingfiles>
                </searchResponse>
                <Copyright>Copyright © Government of Singapore.</Copyright>
                <mainContent>...</mainContent>
        '400':
          description: Bad Request - Often this is because a required parameter is missing or a parameter’s value is invalid. Note:This is returned in XML format.
        '402':
          description: Request Failed - Parameters valid but request failed.
        '403':
          description: Forbidden – Invalid/Missing API Key.
        '404':
          description: Not Found - The requested item doesn’t exist.
        '5XX':
          description: Server Errors - Something is wrong on our end.
components:
  schemas:
    searchingRequest:
      properties:
        apikey:
          description: API Key allocated by SAL
          type: string
        cats:
          description: List of Content Groups. For multiple, please use comma separated values.
          type: string
        l2cats:
          description: List of Content Categories. For multiple, please use comma separated values.
          type: string
        l3cats:
          description: List of Content Subcategories. For multiple, please use comma separated values.
          type: string
        searchTerm:
          description: Search Term.
          type: string
        page:
          description: Current page number.
          type: integer
          default: 1
        maxperpage:
          description: Max per page in pagination.
          type: integer
          default: 20
        surroundingWords:
          description: Surrounding Words.
          type: integer
          default: 10
        orderBy:
          description: Ordering of search result using following value [title-asc, title-des, date-asc, date-des, relevance].
          type: string
          default: relevance
      required:
        - apikey
        - cats
        - l2cats
        - l3cats
        - searchTerm
    Search Results:
      properties:
        searchResponse:
          properties:
            searchStatistic:
              description: Search result statistics eg. Total, Pagination count.
              properties:
                total:
                  description: Total number of search results returned.
                  type: integer
                paginationCount:
                  description: Total number of pagination. 
                  type: integer
            searchResults:
              properties:
                resultList:
                  description: Multiple result of document content containing the search term.
                  properties:
                    result:
                      description: Information on each search items.
                      properties:
                        documentId:
                          description: Document URL. Note:The value in this node will be used for retrieving content.
                          type: string
                        document:
                          description: Title and citation details.
                          properties:
                            Title:
                              description: Title of the document.
                              type: string
                            Citation:
                              description: Citation of the document.
                              type: string
                        Format:
                          description: Indication of document formats available (PDF and XML) - Yes/No.
                          properties:
                        relevance:
                          description: Relevance score of the document.
                          type: integer
                        category:
                          description: Category assigned to the document.
                          type: string
                        documentTooltipHolder:
                          description: List of document metadata.
                        casereference:
                          description: Indicates the precedential value of the document according to the annotations.
                          properties:
                            following:
                              description: This is used to denote that the principle of law established in the instant case (or the dictum referred to) has been applied in subsequent cases.
                              type: integer
                            referring:
                              description: This is used to describe cases which make only a general reference to the instant case.
                              type: integer
                            distinguishing:
                              description: This is used where the instant case is not applied in subsequent cases due to some distinction in the facts or in the law.
                              type: integer
                            notfollowing:
                              description: This is used where the court in subsequent cases has consciously refused to follow the instant case although potentially relevant. It implies that the instant case is wrong.
                              type: integer
                            overruling:
                              description: This is used only where a higher court with the power to overrule has held the instant case to be wrong.
                              type: integer
                        snippets:
                          description: Multiple snippets of document content containing the search term.
                          properties:
                            snippet:
                              description: A snippet of document content containing the search term.
                              type: string
    retrievingRequest:
      properties:
        apikey:
          description: API Key Allocated.
          type: string
        cats:
          description: List of Content Groups. For multiple, please use comma separated values.
          type: string
        l2cats:
          description: List of Content Categories. For multiple, please use comma separated values.
          type: string
        l3cats:
          description: List of Content Subcategories. For multiple, please use comma separated values.
          type: string
        docUrl:
          description: Document URL is only available in the Search Response. Example:<documentId>/Sample Group/sample1.xml</documentId>)
          type: string
        Format:
          description: Format of content. Note:The format XML or PDF will be used to retrieve the entitled document content.
          type: string
      required:
        - apikey
        - cats
        - l2cats
        - l3cats
        - docUrl
    content:
      properties:
        searchResponse:
          properties:
            pdf:
              description: Details of a PDF.
              properties:
                file:
                  description: File name of PDF.
                  type: string
                binary:
                  description: Binary format of the PDFs. Note:developers will be required to convert to physical files programmatically.
                  type: object
            supportingFiles:
              description: Multiple supporting files. (Example:images)
              properties:
                supporting:
                  description: Filename and binary.
                  properties: 
                    image:
                      description: Details of a file.
                      properties:
                        title:
                          description: Name of the file.
                          type: string
                        binary:
                          description: Binary format of the images. Note:developers will be required to convert to physical files programmatically.
                          type: object
            Copyright:
              description: Copyright statement.
              type: string
            mainContent:
              description: Body content of the document. (XML/HTML+CSS)
              type: object
